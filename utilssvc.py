"""
@Time    : 2023/11/12 17:45
@Author  : asanthan
@File    : utilsvc.py
@Description: The app is mainly streams the logs generated by Assistants to the Streamlit Application
"""


import configparser
from typing import Union, Optional

from fastapi import FastAPI , Request
from pydantic import BaseModel
import asyncio
from sse_starlette.sse import EventSourceResponse
from metagpt.const import PROJECT_ROOT
from metagpt.roles.cpg_product_researcher import RESEARCH_PATH, Researcher
from metagpt.config import CONFIG

from datetime import datetime
import uvicorn
from fastapi.middleware.cors import CORSMiddleware
import time
import os


app = FastAPI()

app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)
def follow(thefile):
    '''generator function that yields new lines in a file
    '''
    # seek the end of the file
    thefile.seek(0, os.SEEK_END)

    # start infinite loop
    while True:
        # read last line of file
        line = thefile.readline()
        # sleep if file hasn't been updated
        if not line:
            time.sleep(0.1)
            continue
        print(line)

        yield line

async def logGenerator(request):
    logfile = open(PROJECT_ROOT / 'logs/log.txt', "r")
    loglines = follow(logfile)
    for line in loglines:
        if await request.is_disconnected():
            print("client disconnected!!!")
            break
        yield line
        time.sleep(0.5)

#This is our api endpoint. When a client subscribes to this endpoint, they will recieve SSE from our log file
@app.get('/stream-logs')
async def runStatus(request: Request):
    event_generator = logGenerator(request)
    print(event_generator)
    return EventSourceResponse(event_generator)




uvicorn.run(app, host="0.0.0.0", port=8020)